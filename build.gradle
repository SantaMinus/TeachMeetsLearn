plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.4'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'checkstyle'
  id 'pmd'
  id 'com.github.spotbugs' version '6.0.9'
}

group = 'com.sava'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(23)
  }
}

repositories {
  mavenCentral()
}

dependencies {
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

  compileOnly 'org.projectlombok:lombok'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.liquibase:liquibase-core'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
  implementation 'org.mapstruct:mapstruct:1.6.3'

  runtimeOnly 'org.postgresql:postgresql'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'com.h2database:h2:2.2.224'
}

tasks.named('bootBuildImage') {
  builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
  useJUnitPlatform()
}

checkstyle {
  toolVersion = '10.23.0'
  configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
  ignoreFailures = false
  maxWarnings = 0
}

pmd {
  toolVersion = '7.12.0'
  consoleOutput = true
  ignoreFailures = false
  ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
  ruleSets = []
}

spotbugs {
  toolVersion = '4.9.3'
  ignoreFailures = false
  effort = 'max'
  reportLevel = 'medium'
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
  reports {
    html {
      required = true
    }
  }
}
